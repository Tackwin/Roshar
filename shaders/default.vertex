#version 330 core
layout (location = 0) in vec3 in_pos;

out vec2 texture_coord;
out vec3 pos;

uniform vec4 color;
uniform vec2 size;
uniform vec2 origin;
uniform vec2 object_pos;
uniform float rotation;
uniform sampler2D color_texture;
uniform vec4 world_bounds;
uniform vec2 screen_bounds;

void main() {
	vec2 object_space = vec2(
		in_pos.x - origin.x,
		in_pos.y - origin.y
	);
	
	object_space.y = object_space.y * size.y;
	object_space.x = object_space.x * size.x;

	float r = -rotation;

	mat2 rot = mat2(cos(r), -sin(r), sin(r), cos(r));
	object_space = rot * object_space;
	

	pos = vec3(
		object_pos.x + object_space.x,
		object_pos.y + object_space.y,
		1.0
	);


	pos.x = 2 * (pos.x - world_bounds.x) / (world_bounds.z) - 1;
	pos.y = 2 * (pos.y - world_bounds.y) / (world_bounds.w) - 1;

	texture_coord.x = in_pos.x;
	texture_coord.y = in_pos.y;

    gl_Position = vec4(pos, 1.0);
}